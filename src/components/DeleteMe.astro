---
import { Image } from "astro:assets";
import ExternalLink from "@utils/ExternalLink.astro";
import seo from "public/seo.png";
import gitHub from "@images/github.svg";
---

<div class="wrapper">
  <header>
    <Image
      alt="Astronaut logo"
      src={seo}
      height={seo.height}
      width={seo.width}
      loading="eager"
    />

    <h1 class="sr-only">Astronaut</h1>
    <p>
      <blockquote>
        Astronaut: "A person trained to pilot, navigate, or otherwise
        participate as a crew member of a spacecraft." <ExternalLink
          href="https://www.thefreedictionary.com/astronaut"
          name="Source"
        />
      </blockquote>
    </p>
    <br aria-hidden="true" />
    <a
      id="template-button"
      href="https://github.com/stevefrenzel/astronaut/generate/"
      ><span> Use template</span>
      <Image alt="GitHub logo" src={gitHub} height={60} width={60} />
    </a>
    <p id="template-text">
      (Or check it out on <a href="https://github.com/stevefrenzel/astronaut"
        >GitHub</a
      > first)
    </p>
    <br aria-hidden="true" />
    <p>
      This is a very opinionated starter template for the static site generator <ExternalLink
        href="https://astro.build/"
        name="Astro"
      />. I'm a big fan of Astro, as it combines two things I really like: A
      component-based approach and zero client-side JavaScript!
    </p>
    <br aria-hidden="true" />
    <p>
      This is how I like to set up my projects, but sharing is caring, so:
      Please use it for your own projects and customise it. Here are all the
      features:
    </p>
  </header>
  <main id="main">
    <h2>Table of contents</h2>
    <ul id="table-of-contents" role="list">
      <li>
        <a href="#imports">Absolute Imports</a>
        <span aria-hidden="true"> 📥</span>
      </li>
      <li><a href="#reset">CSS Reset</a><span aria-hidden="true"> 💥</span></li>
      <li>
        <a href="#fonts">Custom Fonts</a><span aria-hidden="true"> 🔤</span>
      </li>
      <li>
        <a href="#utopia">Fluid Responsive Design</a><span aria-hidden="true">
          🌊</span
        >
      </li>
      <li>
        <a href="#preference">Preference Detection</a><span aria-hidden="true"
        ></span>
         👀
      </li>
      <li>
        <a href="#hooks">Pre-Commit Hooks</a><span aria-hidden="true"> 🐶</span>
      </li>
      <li>
        <a href="#prettier">Prettier Config</a><span aria-hidden="true">
          💅</span
        >
      </li>
      <li><a href="#seo">SEO</a><span aria-hidden="true"> 🔍</span></li>
      <li>
        <a href="#security">Security Headers</a><span aria-hidden="true">
          🔒</span
        >
      </li>
      <li>
        <a href="#usability">Usability</a><span aria-hidden="true"> 🌐</span>
      </li>
    </ul>
  </main>

  <div class="spacer"></div>

  <h2 id="imports">Absolute Imports <span aria-hidden="true">📥</span></h2>
  <p>Tired of your imports looking like this?</p>
  <pre>
        <code class="code-block">
          import Layout from "../../../../../layouts/Layout.astro";
        </code>
      </pre>
  <p>
    Me too, which is why I'm using absolute imports to make it look nice and
    clean:
  </p>
  <pre>
        <code class="code-block">
          import Layout from "@layouts/Layout.astro";
        </code>
      </pre>

  <div class="spacer"></div>

  <h2 id="reset">CSS Reset <span aria-hidden="true">💥</span></h2>
  <p>
    I never start a project without Andy Bell's <ExternalLink
      href="https://andy-bell.co.uk/a-more-modern-css-reset/"
      name="(more) modern CSS reset"
    />! It lays the foundation for what I'm about to do with Utopia's fluid
    responsive design.
  </p>

  <div class="spacer"></div>

  <h2 id="fonts">Custom Fonts <span aria-hidden="true">🔤</span></h2>
  <p>
    Using system fonts is a safe and performant way to add some identity to your
    typography, but let's be honest: They're overused and quite boring. Which is
    why I like to use custom fonts, usually one for headlines and one for body
    text. You can of course always change them to Lobster or Papyrus, I won't
    judge.
  </p>

  <div class="spacer"></div>

  <h2 id="utopia">
    Fluid Responsive Design <span aria-hidden="true">🌊</span>
  </h2>
  <p>
    I need you to sit down for this one. You don't really need breakpoints to
    define your layout for mobile, tablet and desktop devices. How could you
    even anticipate what device will be used to gaze upon your beautiful
    website?
  </p>
  <br aria-hidden="true" />
  <p>
    Wouldn't make it more sense if you had a fluid, yet robust design which
    works for all viewports? Which requires less code and no <code
      >breakpoints.css</code
    >
     nearing 1000 lines of code? Let me introduce you to <ExternalLink
      href="https://utopia.fyi/"
      name="Utopia"
    />, which is used to generate adaptive font sizes and spacing.
  </p>
  <br aria-hidden="true" />
  <p>
    You should also check out <ExternalLink
      href="https://viewports.fyi/"
      name="viewports.fyi"
    /> for a deep-dive into this topic. And while you're at it, have a look at

    <ExternalLink
      href="https://buildexcellentwebsit.es/"
      name="buildexcellentwebsit.es"
    /> as well.
  </p>

  <div class="spacer"></div>

  <h2 id="preference">
    Preference Detection <span aria-hidden="true">👀</span>
  </h2>
  <p>
    This template automatically changes the theme based on your operating
    settings by utilising <ExternalLink
      href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme"
      name="prefers-color-scheme"
    />. It also checks if you prefer reduced motions via
    <ExternalLink
      href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion"
      name="prefers-reduced-motion"
    />. Look and behold, the power of CSS!
  </p>

  <div class="spacer"></div>

  <h2 id="hooks">Pre-Commit Hooks <span aria-hidden="true">🐶</span></h2>
  <p>
    Commiting to something can sometimes take a lot of effort. Commiting code is
    no exception, but at least here we can pull out the safety net to soften our
    fall in case we made a mistake. In this case it's running
    <code>astro check</code> (powered by <ExternalLink
      href="https://typicode.github.io/husky/"
      name="Husky"
    />), which will look for the following things in your project BEFORE your
    code is being commited:
  </p>
  <br aria-hidden="true" />

  <ul id="hooks-list" role="list">
    <li>Errors <span aria-hidden="true">🚨</span></li>
    <li>Warnings <span aria-hidden="true">⚠️</span></li>
    <li>Hints <span aria-hidden="true">💡</span></li>
  </ul>

  <div class="spacer"></div>

  <h2 id="prettier">Prettier Config <span aria-hidden="true">💅</span></h2>
  <p>
    I don't know about you, but if my code is not nicely formatted after hitting
    save, I'm starting to feel very weird. Which is why this comes with a
    Prettier configuration, in case you're using it. Or a you one of those
    people who do this manually?!
  </p>

  <div class="spacer"></div>

  <h2 id="seo">SEO <span aria-hidden="true">🔍</span></h2>
  <p>
    Predefined values for improved search engine optimisation can be found in
    <code>Layout.astro</code>. These settings have been my reliable companion
    for a couple of years now and I put a lot of research, work and testing into
    it.
  </p>

  <div class="spacer"></div>

  <h2 id="security">Security Headers <span aria-hidden="true">🔒</span></h2>
  <p>
    Better safe than sorry, am I right? There are multiple ways to add security
    headers to your website and I decided to store them in a
    <code>vercel.json</code> file, cause this website was deployed to (you
    guessed it) <ExternalLink href="https://vercel.com/" name="Vercel" />. It
    contains the following headers, feel free to adjust them to your needs:
  </p>
  <br aria-hidden="true" />
  <ul role="list">
    <li>Content-Security-Policy</li>
    <li>X-Frame-Options</li>
    <li>X-Content-Type-Options</li>
    <li>Referrer-Policy</li>
    <li>Permissions-Policy</li>
  </ul>

  <div class="spacer"></div>

  <h2 id="usability">Usability <span aria-hidden="true">🌐</span></h2>
  <p>
    I've added a bunch of handy utilities which will not only improve usability,
    but accessibility as well:
  </p>
  <br aria-hidden="true" />
  <ul role="list">
    <li>"Back to top" button</li>
    <li>External link (showing icon)</li>
    <li>Improve focus behaviour *</li>
    <li>Skip link</li>
  </ul>
  <br aria-hidden="true" />
  <p>
    * Thanks to <ExternalLink
      href="https://css-tricks.com/standardizing-focus-styles-with-css-custom-properties/"
      name="Stephanie Eckles"
    /> & <ExternalLink
      href="https://codepen.io/argyleink/pen/JjEzeLp"
      name="Adam Argyle"
    />
  </p>
</div>

<footer>
  <p>&copy; 2023 Steve Frenzel</p>
  <p><span aria-hidden="true">⚖️</span> MIT License</p>
</footer>

<style>
  .wrapper {
    margin: 0 auto;
    max-width: 768px;
    padding: 0 var(--space-s);
  }

  img {
    height: auto;
    margin: var(--space-l) 0;
  }

  .spacer {
    margin: var(--space-2xl) 0;
  }

  #template-button {
    align-items: center;
    background: purple;
    border-radius: var(--border-radius);
    box-shadow: 0px 0px 30px 0px purple;
    color: white;
    display: flex;
    flex-wrap: wrap;
    font-size: var(--step-2);
    gap: var(--space-xs);
    margin: 0 auto;
    padding: var(--space-2xs) var(--space-xs);
    text-decoration: none;
    width: fit-content;
  }

  #template-button:focus,
  #template-button:hover {
    box-shadow: none;
  }

  #template-button img {
    margin: 0;
  }

  #template-text {
    font-size: var(--step-0);
    margin: var(--space-2xs) auto 0 auto;
    width: fit-content;
  }

  #template-text a {
    font-size: var(--step-0);
  }

  #template-text a::after {
    content: " ↪";
  }

  blockquote {
    font-style: italic;
    margin: 0;
  }

  h2 {
    margin-bottom: var(--space-xs);
  }

  p {
    margin: 0;
  }

  pre {
    background: var(--color-grey-dark);
    border: 1px solid var(--color-grey-light);
    border-radius: var(--border-radius);
    font-size: var(--step-0);
    color: var(--color-yellow);
    overflow: auto;
    padding: var(--space-s);
    white-space: nowrap;
  }

  code {
    word-break: break-all;
  }

  .code-block {
    color: var(--color-yellow) !important;
  }

  ul,
  li {
    margin: 0;
  }

  footer {
    border-top: 1px solid var(--color-grey-dark);
    text-align: center;
    margin-top: var(--space-3xl);
    padding: var(--space-l) 0;
  }

  footer p {
    font-size: var(--step-0);
  }

  .dark {
    display: none;
  }
  .light {
    display: initial;
  }

  @media (prefers-color-scheme: light) {
    .dark {
      display: initial;
    }
    .light {
      display: none;
    }
  }
</style>
